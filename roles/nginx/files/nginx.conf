user www-data;

# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes auto;

pid /run/nginx.pid;

events {
    # Maximum number of simultaneous connections that
    # can be opened by a worker process

    worker_connections 768;
}

http {
    server_tokens off;

    #  Speed up file transfers by using sendfile()
    sendfile on;

    # Tell Nginx not to send out partial frames; this increases throughput
    # since TCP frames are filled up before being sent out. (adds TCP_CORK)
    # Enabled only if sendfile is used.
    tcp_nopush on;

    tcp_nodelay on;

    # Remedy "could not build the types_hash" errors.
    # Default 1024
    # See http://nginx.org/en/docs/hash.html
    types_hash_max_size 2048;

    # Default KeepAlive timeout.
    # How long each connection is allowed to stay idle
    # keepalive_timeout timeout [header_timeout]
    # The optional parameter sets a value in the "Keep-Alive: timeout=time" response header field.
    # The 'timeout=time' field is recognized by Mozilla and Konqueror;
    # however, it is not what makes a connection "keep-alive".
    keepalive_timeout 20 20;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Set default client_max_body_size.
    # Can/will be overridden by server blocks.
    client_max_body_size 1m;

    # TODO: Test
    charset_types
        # text/html is already included by default
        text/css
        text/plain
        text/vnd.wap.wml
        application/javascript
        application/json
        application/rss+xml
        application/xml;

    # Default logging locations
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Enable Gzip compressed
    gzip on;

    gzip_disable "msie6";

    # Increase compression level from default 1
    gzip_comp_level 5;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    gzip_min_length 256;

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    gzip_proxied any;

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies.
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    gzip_vary on;

  # Compress all output labeled with one of the following MIME-types.
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
      # text/html is always compressed by HttpGzipModule

    # Check out this directive if you serve pre-gzipped static files
    # gzip_static on;

    # include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
